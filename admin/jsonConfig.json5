{   // lets start
    "i18n": true,
    "type": "tabs",
    "tabsStyle": {
        width: "calc(100% - 100px)"
    },
    "items": {
        "tab_1":{
            "type": "panel",
            "label": "Static",
            "items": {
                "lintToJson": {
                    "type": "staticLink",
                    "text": "link to file that describes this configuration",
                    "href": "https://github.com/mcm4iob/ioBroker.jsonconfig-demo/blob/main/admin/jsonConfig.json5",
                    "icon": "info",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                // divider - horizontal line
                "dividerHdr": {
                    "newLine": true,
                    "type": "header",
                    "text": "DIVIDER",
                    "size": 2
                },
                "deviderTxt": {
                    "type": "staticText",
                    "text": "DIVIDER displays a divider line",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "deviderTxt1": {
                    "type": "staticText",
                    "text": "some text before",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "divider": {
                    "type": "divider",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "deviderTxt2": {
                    "type": "staticText",
                    "text": "some text after",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // pattern - read only field with pattern like 'https://${data.ip}:${data.port}' (will not be saved in config) Text input with read only flag, that shows pattern.
                "patternHdr": {
                    "type": "header",
                    "text": "PATTERN",
                    "size": 2
                },
                "patternInput":{
                    "type": "text",
                    "label": "Text",
                    "help": "Enter text to be included into pattern output",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "pattern" :{
                    "type": "pattern",
                    "copyToClipboard": true,
                    "pattern": "This is a static pattern field with text [${data.patternInput}] from above",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },

                // staticImage - static image
                "staticImageHdr": {
                    "type": "header",
                    "text": "STATIC IMAGE",
                    "size": 2
                },
                "staticImageWarning": {
                    "type": "staticText",
                    "text": "WARNING: functionality of element STATIC IMAGE currently under investigation",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "staticImage": {
                    "type": "staticImage",
                    "label": "some picture",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/admin/admin/admin.png",
                    "newLine": true,
                    "src": "../../adapter/jsonconfig-demo/jsonconfig-demo.png",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                // staticLink - static link
                "staticLinkHdr": {
                    "type": "header",
                    "text": "STATIC LINK",
                    "size": 2
                },
                "staticLink1Txt": {
                    "type": "staticText",
                    "text": "A static link can be shown textually", // same as label
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "staticLink1": {
                    "type": "staticLink",
                    "text": "link to jsonConfig schema.md",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/jsonConfig/SCHEMA.md",
                    "icon": "info",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "staticLink2Txt": {
                    "type": "staticText",
                    "text": "or as button. Several icons are available.", // same as label
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "staticLink2a": {
                    "type": "staticLink",
                    //"label": "link",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/jsonConfig/SCHEMA.md",
                    "button": true,
                    "icon": "auth",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "staticLink2b": {
                    "type": "staticLink",
                    //"label": "link",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/jsonConfig/SCHEMA.md",
                    "button": true,
                    "icon": "send",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "staticLink2c": {
                    "type": "staticLink",
                    //"label": "link",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/jsonConfig/SCHEMA.md",
                    "button": true,
                    "icon": "web",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "staticLink2d": {
                    "type": "staticLink",
                    //"label": "link",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/jsonConfig/SCHEMA.md",
                    "button": true,
                    "icon": "warning",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "staticLink2e": {
                    "type": "staticLink",
                    //"label": "link",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/jsonConfig/SCHEMA.md",
                    "button": true,
                    "icon": "error",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "staticLink2f": {
                    "type": "staticLink",
                    //"label": "link",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/jsonConfig/SCHEMA.md",
                    "button": true,
                    "icon": "info",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "staticLink2g": {
                    "type": "staticLink",
                    //"label": "link",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/jsonConfig/SCHEMA.md",
                    "button": true,
                    "icon": "search",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "staticLink2h": {
                    "type": "staticLink",
                    "text": "optional text possible",
                    "href": "https://github.com/ioBroker/ioBroker.admin/blob/master/packages/jsonConfig/SCHEMA.md",
                    "button": true,
                    "icon": "info",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "staticLink3": {
                    "type": "staticText",
                    "text": "Note that the link url can contain variables.", // same as label
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // staticText - static text like description
                "staticTextHdr": {
                    "type": "header",
                    "text": "STATIC TEXT",
                    "size": 2
                },
                "staticText1": {
                    "type": "staticText",
                    "text": "This is a static Text", // same as label
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "staticText2": {
                    "type": "staticText",
                    "text": "Static text kan have several sizes",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "staticText2a": {
                    "type": "staticText",
                    "text": "font 16",
                    "style": {
                        "fontSize": 16
                    },
                   "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "staticText2b": {
                    "type": "staticText",
                    "text": "font 24",
                    "style": {
                        "fontSize": 24
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "staticText3": {
                    "type": "staticText",
                    "text": "and colours",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "staticText3a": {
                    "type": "staticText",
                    "text": "red",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "staticText3b": {
                    "type": "staticText",
                    "text": "green",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                }
            }
        },

        "tab_2":{
            "type": "panel",
            "label": "Infos",
            "items": {
                // alive - just indication if the instance is alive, and it could be used in "hidden" and "disabled" (will not be saved in config) Just text: Instance is running, Instance is not running
                "aliveHdr": {
                    "type": "header",
                    "text": "ALIVE",
                    "size": 2
                },
                "aliveTxt": {
                    "type": "staticText",
                    "text": "ALIVE displays information about running or stopped instance",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "alive": {
                    "type": "alive",
                    "label": "Alive",
                    "instance": 0,                                  //check if the instance is alive. If not defined, it will be used current instance. You can use ${data.number} pattern in the text.
                    "textAlive": "Instance (%&s) is alive",         // default text is Instance %s is alive, where %s will be replaced by ADAPTER.0.
                    "textNotAlive": "Instance (%s) is not alive",   // default text is Instance %s is not alive, where %s will be replaced by ADAPTER.0.
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // uuid - Show iobroker UUID
                "uuidTextHdr": {
                    "type": "header",
                    "text": "UUID",
                    "size": 2
                },
                "uuidText1": {
                    "type": "staticText",
                    "text": "show iobroker uuid",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "uuid": {
                    "type": "uuid",
                    "label": "This is the iobroker UUID",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                }
            }
        },

        "tab_3":{
            "type": "panel",
            "label": "Pickers",
            "items": {
                // color - color picker
                "colorHdr": {
                    "type": "header",
                    "text": "COLOR",
                    "size": 2
                },
                "colorTxt": {
                    "type": "staticText",
                    "text": "COLOR is used to select a color",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "color": {
                    "type": "color",
                    "label": "select a color",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "colorVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.color}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // coordinates
                "coordinatesHdr": {
                    "type": "header",
                    "text": "COORDINATES",
                    "size": 2
                },
                "coordinatesWarning": {
                    "type": "staticText",
                    "text": "WARNING: element COORDINATES currently has some known issues, i.e delayed saving",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "coordinates1Txt": {
                    "type": "staticText",
                    "text": "COORDINATES displays coordinates (divider: #)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "coordinates1": {
                    "type": "coordinates",
                    "divider": "#",
                    "useSystemName": false,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "coordinates1val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.coordinates1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "coordinates2Txt": {
                    "type": "staticText",
                    "text": "COORDINATES displays coordinates (with autoInit)",
                    "newLine": true,
                   "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "coordinates2": {
                    "type": "coordinates",
                    "autoInit": true,
                    "useSystemName": false,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "coordinates2val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.coordinates2}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "coordinates3Txt": {
                    "type": "staticText",
                    "text": "COORDINATES displays coordinates (with names and useSystemSettings)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "coordinates3": {
                    "type": "coordinates",
                    "autoInit": true,
                    "longitudeName": "longitude",
                    "latitudeName": "latitude",
                    "useSystemName": "useSystem",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "coordinates3val": {
                    "type": "pattern",
                    "pattern": "stored values are ${data.longitude} and ${data.latitude}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // func - select a configured functionality
                "funcHdr": {
                    "type": "header",
                    "text": "FUNC",
                    "size": 2
                },
                "funcWarning": {
                    "type": "staticText",
                    "text": "WARNING: functionality of element COORDINATES currently under investigation",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "funcTxt": {
                    "type": "staticText",
                    "text": "FUNC is used to select a functionality from enum.func. Note that enum.func should contain some data for demo.",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "func": {
                    "type": "func",
                    "label": "select a function",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "funcVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.func}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // instance
                "instanceHdr": {
                    "type": "header",
                    "text": "INSTANCE",
                    "size": 2
                },
                "instance1Txt": {
                    "type": "staticText",
                    "text": "INSTANCE select an instance of adapter admin (option short)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "instance1": {
                    "type": "instance",
                    "adapter": "admin",
                    "short": true,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "instance1val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.instance1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "instance2Txt": {
                    "type": "staticText",
                    "text": "INSTANCE select an instance of adapter admin (option long)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "instance2": {
                    "type": "instance",
                    "adapter": "admin",
                    "long": true,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "instance2val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.instance2}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "instance3Txt": {
                    "type": "staticText",
                    "text": "INSTANCE select an instance of adapter admin, all or none (options allowDeactivate and all)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "instance3": {
                    "type": "instance",
                    "adapter": "admin",
                    "allowDeactivate": true,
                    "all": true,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "instance3val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.instance3}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // ip drop down selection preloaded with available ip addresses
                "ipHdr": {
                    "type": "header",
                    "text": "IP",
                    "size": 2
                },
                "ipTxt": {
                    "type": "staticText",
                    "text": "ip drop down selection preloaded with available ip addresses of host",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "ip": {
                    "type": "ip",
                    "label": "IP-Address",
                    "sm":4,
                    "md":4,
                    "lg":4,
                    "xs":4,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "ipVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.ip}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // language - select language
                "languageHdr": {
                    "type": "header",
                    "text": "LANGUAGE",
                    "size": 2
                },
                "languageTxt": {
                    "type": "staticText",
                    "text": "drop down to select language",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "language": {
                    "type": "language",
                    "label": "Select a language",
                    "system": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "languageVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.language}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // objectId - object ID - show it with name, color and icon
                "objectIdHdr": {
                    "type": "header",
                    "text": "OBJECT ID",
                    "size": 2
                },
                "objectId1Txt": {
                    "type": "staticText",
                    "text": "select object ID - show it with name, color and icon (states only)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "objectId1": {
                    "type": "objectId",
                    "label": "select an objectId",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "objectId1Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.objectId1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "objectId2Txt": {
                    "type": "staticText",
                    "text": "select object ID - show it with name, color and icon, select devices and channels",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                // TODO filtering does not seem to work
                "objectId2": {
                    "type": "objectId",
                    "label": "select an objectId",
                    "types":['channel', 'device'],
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "objectId2Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.objectId2}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },


                // room - select from enum.room
                "roomHdr": {
                    "type": "header",
                    "text": "ROOM",
                    "size": 2
                },
                "roomWarning": {
                    "type": "staticText",
                    "text": "WARNING: functionality of element ROOM currently under investigation",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "roomTxt": {
                    "type": "staticText",
                    "text": "ROOM is used to select a room from enum.room. Note that enum.room should contain some data for demo.",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "room": {
                    "type": "room",
                    "label": "select a room",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "roomVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.room}"
                },

                // user - select a user
                "userHdr": {
                    "type": "header",
                    "text": "USER",
                    "size": 2
                },
                "userTxt": {
                    "type": "staticText",
                    "text": "USER is used to select a user.",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "user": {
                    "type": "user",
                    "label": "select a user",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "userVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.user}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // timepicker
                "datePickerHdr": {
                    "type": "header",
                    "text": "DATEPICKER",
                    "size": 2
                },
                "datePickerWarning": {
                    "type": "staticText",
                    "text": "WARNING: element DATEPICKER currently has some known issues, i.e data is stored only after change of contents",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
//                "datePickerTxt": {
//                    "type": "staticText",
//                    "text": "INSTANCE select an instance of adapter admin (option short)",
//                    "newLine": true,
//                    "xs": 12,
//                    "sm": 12,
//                    "md": 12,
//                    "lg": 6,
//                    "xl": 6
//                },
                "datePicker1": {
                    "type": "datePicker",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "datePicker1val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.datePicker1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // timepicker
                "timePicker1Hdr": {
                    "type": "header",
                    "text": "TIMEPICKER",
                    "size": 2
                },
                "timePickerWarning": {
                    "type": "staticText",
                    "text": "WARNING: element TIMEPICKER currently has some known issues, i.e data is stored only after change of contents",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
//                "timepickerTxt": {
//                    "type": "staticText",
//                    "text": "INSTANCE select an instance of adapter admin (option short)",
//                    "newLine": true,
//                    "xs": 12,
//                    "sm": 12,
//                    "md": 12,
//                    "lg": 6,
//                    "xl": 6
//                },
                "timePicker1": {
                    "type": "timePicker",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "timePicker1val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.timePicker1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                }
            }
        },

        "tab_4":{
            "type": "panel",
            "label": "INPUT",
            "items": {
                // autocomplete
                "autocompleteHdr": {
                    "type": "header",
                    "text": "AUTOCOMPLETE",
                    "size": 2
                },
                "autocomplete1Txt": {
                    "type": "staticText",
                    "text": "Standard autocomplete",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "autocomplete1": {
                    "type": "autocomplete",
                    "label": "Simple autocomplete",
                    "options":["value1", "value2", "value3"],
                    "freeSolo": false,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "autocomplete1Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.autocomplete1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "autocomplete2Txt": {
                    "type": "staticText",
                    "text": "autocomplete with free text",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "autocomplete2": {
                    "type": "autocomplete",
                    "label": "Simple autocomplete",
                    "options":[{"label": "Option 1", "value":1}, {"label": "No Option", "value":2}, "SomeText"],
                    "freeSolo": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "autocomplete2Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.autocomplete2}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // standard checkbox
                "checkboxHdr": {
                    "type": "header",
                    "text": "CHECKBOX",
                    "size": 2
                },
                "checkbox1Txt": {
                    "type": "staticText",
                    "text": "Standard checkbox",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "checkbox1": {
                    "type": "checkbox",
                    "label": "Simple Checkbox",
                    "tooltip": "click to enable or disable checkbox, check tooltip by hovering over checkbox",
                    "help": "Help text possible",
                    "default": false,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "checkbox1Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.checkbox1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "checkbox2Txt": {
                    "type": "staticText",
                    "text": "Checkboxes can be enabled and/or hidden",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "checkbox2a": {
                    "type": "checkbox",
                    "label": "Checkbox #1",
                    "tooltip": "enables second checkbox",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "checkbox2b": {
                    "type": "checkbox",
                    "label": "Checkbox #2",
                    "tooltip": "enabled by first checkbox, hides third checkbox",
                    "disabled": "!data.checkbox2a",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "checkbox2c": {
                    "type": "checkbox",
                    "label": "Checkbox #3",
                    "tooltip": "causes error if not checked",
                    "hidden": "!data.checkbox2b",
                    "validator": "!!data.checkbox2c",
                    "validatorErrorText": "check checkbox 3 to clear error",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // chips - user can enter the word, and it will be added (see cloud => services => White list). Option is an array if no `delimiter` defined.
                "chipsHdr": {
                    "type": "header",
                    "text": "CHIPS",
                    "size": 2
                },
                "chipsTxt": {
                    "type": "staticText",
                    "text": "user can enter the word, and it will be added. Output is an array if no `delimiter` defined",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "chips": {
                    "type": "chips",
                    "label": "Text to add",
                    "delimiter": ";",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "chipsVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.chips}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // cron
                "cronHdr": {
                    "type": "header",
                    "text": "CRON",
                    "size": 2
                },
                "cronTxt": {
                    "type": "staticText",
                    "text": "configure cron data",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "cron": {
                    "type": "cron",
                    "label": "cron data",
                    "delimiter": ";",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "cronVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.cron}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // json - json editor
                "jsonHdr": {
                    "type": "header",
                    "text": "JSON",
                    "size": 2
                },
                "jsonWarning": {
                    "type": "staticText",
                    "text": "WARNING: functionality of element JSON currently under investigation",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "jsonTxt": {
                    "type": "staticText",
                    "text": "configure json data",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "json": {
                    "type": "jsonEditor",
                    "label": "json editor",
                    "delimiter": ";",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "jsonVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.json}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // number
                "numberHdr": {
                    "type": "header",
                    "text": "NUMBER",
                    "size": 2
                },
                "number1Txt": {
                    "type": "staticText",
                    "text": "element to input a number",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "number1": {
                    "type": "number",
                    "label": "number",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "number1Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.number1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "number2Txt": {
                    "type": "staticText",
                    "text": "element to input a number limited to -5 to +150 ",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "number2": {
                    "type": "number",
                    "label": "number",
                    "min":-5,
                    "max":150,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "number2Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.number2}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "number3Txt": {
                    "type": "staticText",
                    "text": "element to input a number with step size 0,001",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "number3": {
                    "type": "number",
                    "label": "number",
                    "min":-5,
                    "step":0.001,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "number3Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.number3}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // password (repeat - if repeat password must be shown with the same width settings)
                "passwordHdr": {
                    "type": "header",
                    "text": "PASSWORD",
                    "size": 2
                },
                "password1Txt": {
                    "type": "staticText",
                    "text": "element to input a password",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "password": {
                    "type": "password",
                    "label": "password",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "password1Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.password1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "password2Txt": {
                    "type": "staticText",
                    "text": "element to input a password, add repeat field and visible button",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "password2": {
                    "type": "password",
                    "label": "password",
                    "repeat": true,
                    "visible": true,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "password2Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.password2}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "passwordInfo": {
                    "type": "staticText",
                    "text": "Note that passwords must be store encrypted using io-package.json config",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // port - Special input for ports. It checks automatically if port is used by other instances and shows warning
                "portHdr": {
                    "type": "header",
                    "text": "PORT",
                    "size": 2
                },
                "portTxt": {
                    "type": "staticText",
                    "text": "PORT is used to specify a port. It checks automatically if port is used by other instances and shows warning.",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "port": {
                    "type": "port",
                    "label": "select a port",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "portVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.port}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // select
                "selectHdr": {
                    "type": "header",
                    "text": "SELECT",
                    "size": 2
                },
                "selectTxt": {
                    "type": "staticText",
                    "text": "select a value from the configured list.",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "select": {
                    "type": "select",
                    "label": "Please select",
                    "options": [
                        {"label": "option 1", "value": 1},
                        {"label": "option 2", "value": 2},
                        {"label": "option 3", "value": 3}
                    ],
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "selectVal": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.select}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // setState - button that set instance's state
                "setStateHdr": {
                    "type": "header",
                    "text": "SET STATE",
                    "size": 2
                },
                "setState1Txt": {
                    "type": "staticText",
                    "text": "button that sets an instance's state demo_state_1 to 'Demo val' (fixed at jsonconfig-demo.0)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "setState1": {
                    "type": "setState",
                    "label": "set",
                    "id": "jsonconfig-demo.0.test.demo_1",
                    "ack": true,
                    "val": "Demo value",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "setState2Txt": {
                    "type": "staticText",
                    "text": "button that sets an instance's state demo_state_2 to text entered by user (fixed at jsonconfig-demo.0)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "setState2t": {
                    "type": "text",
                    "label": "text",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "setState2": {
                    "type": "setState",
                    "label": "set it",
                    "id": "jsonconfig-demo.%INSTANCE%.test.demo_2",
                    "ack": false,
                    "val": "data.setState2t",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // slider - show slider (only Admin6)
                "sliderHdr": {
                    "type": "header",
                    "text": "SLIDER",
                    "size": 2
                },
                "sliderWarning": {
                    "type": "staticText",
                    "text": "WARNING: element SLIDER currently has some known issues, i.e range does not work as expected",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "slider1Txt": {
                    "type": "staticText",
                    "text": "shift slider to select a value, default range is 0 to 100",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "slider1": {
                    "type": "slider",
                    "label": "select by shifting",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "slider1Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.slider1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "slider2Txt": {
                    "type": "staticText",
                    "text": "shift slider to select a value, different range (-10 to +80, step 0,1)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "slider2": {
                    "type": "slider",
                    "label": "select by shifting",
                    "min": -25,
                    "max": 80,
                    "step":0.1,
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "slider2Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.slider2}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                // text - Text component
                "textHdr": {
                    "type": "header",
                    "text": "TEXT",
                    "size": 2
                },
                "text1Txt": {
                    "type": "staticText",
                    "text": "standard text field for data input",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "text1": {
                    "type": "text",
                    "label": "Textinput",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text1Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.text1}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text2Txt": {
                    "type": "staticText",
                    "text": "text fields can be disabled and hidden",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "text2c": {
                    "type": "checkbox",
                    "label": "click to enable",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text2": {
                    "type": "text",
                    "label": "Textinput",
                    "disabled": "!!data.text2c",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text2Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.text2}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text3c": {
                    "type": "checkbox",
                    "label": "click to hide",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text3": {
                    "type": "text",
                    "label": "Textinput",
                    "hidden": "data.text3c",
                    "hideOnlyControl": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text3Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.text3}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text4Txt": {
                    "type": "staticText",
                    "text": "Text fields can be readonly",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "text4": {
                    "type": "text",
                    "label": "Textinput",
                    "readOnly": true,
                    "default": "some default text",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text4Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.text4}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text5Txt": {
                    "type": "staticText",
                    "text": "Multiline text fields are possible too (here 3 to 7 rows)",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "text5": {
                    "type": "text",
                    "label": "Textinput",
                    "minRows":3,
                    "maxRows":7,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "text5Val": {
                    "type": "pattern",
                    "pattern": "stored value is ${data.text5}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                }
            }
        },

        "tab_5":{
            "type": "panel",
            "label": "SEND TO",
            "items": {
                "introSendToTxt": {
                    "type": "staticText",
                    "text": "Check adapter log for messages transmitted to adapter",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "introSendToWarning": {
                    "type": "staticText",
                    "text": "WARNING: all sendTo elements requires a running adapter instance",
                    "hidden": "_alive",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                "sendToHdr": {
                    "type": "header",
                    "text": "SENDTO",
                    "size": 2
                },
                "SendTo1Txt": {
                    "type": "staticText",
                    "text": "sendTo send 2 text filed contents to adapter. Result is filled into third field.",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "sendTo1a": {
                    "type": "text",
                    "label": "Text 1",
                    "default": "Text #1",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "sendTo1b": {
                    "type": "text",
                    "label": "Text 1",
                    "default": "Text #2",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "sendTo1": {
                    "type": "sendTo",
                    "label": "send It",
                    "variant": "outlined",
                    "showProcess": true,
                    "command": "sendTo1",
                    "jsonData": "{ \"data1\": \"${data.sendTo1a}\", \"data2\": \"${data.sendTo1b}\" }",
                    "useNative": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "sendTo1Ret": {
                    "type": "text",
                    "label": "Result",
                    "readOnly": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "SendTo2Txt": {
                    "type": "staticText",
                    "text": "select result type and send it to adapter.",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "sendTo2a": {
                    "type": "select",
                    "label": "Please select",
                    "options":[
                        {"label": "OK", "value":1},
                        {"label": "FAIL", "value":0}
                    ],
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4,
                    "newLine": true
                },
                "sendTo2": {
                    "type": "sendTo",
                    "label": "send It",
                    "variant": "outlined",
                    "showProcess": true,
                    "command": "sendTo2",
                    "jsonData": "{ \"data\": \"${data.sendTo2a}\"}",
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },

                "textSendToHdr": {
                    "type": "header",
                    "text": "TEXTSENDTO",
                    "size": 2
                },
                "textSendTo1Txt": {
                    "type": "staticText",
                    "text": "textSendTo displays a static text returned by adapter. It will update whenever checkbox is clicked",
                    "newLine": true,
                   "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },
                "textSendTo1c":{
                    "type": "checkbox",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
                "textSendTo1":{
                    "type": "textSendTo",
                    "label": "lblStationId",
                    "command": "textSendTo1",
                    "jsonData": "{\"username\": \"aaa\", \"password\": \"bbb\" }",
                    "alsoDependsOn": ["textSendTo1c"],
                    "xs": 12,
                    "sm": 12,
                    "md": 6,
                    "lg": 4,
                    "xl": 4
                },
            }
        },

        "tab_6":{
            "type": "panel",
            "label": "TABLES",
            "items": {
                "tableHdr": {
                    "type": "header",
                    "text": "BASIC TABLE with checks",
                    "size": 2
                },

                "introTable1Txt1": {
                    "type": "staticText",
                    "text": "This is a classic table with some elements. Add rows by clicking at + sign. <br>Columns Unique Text and Restructured Text have built in validations and error messages.",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                "table1Err1": {
                    "type": "staticText",
                    "text": "ERROR: column 'Unique Text' must contain unique text",
                    "newLine": true,
                    "hidden": "const x={}; for(let ii=0; data.table1 && ii<data.table1.length; ii++){const t=data.table1[ii].table1Unique; if (x[t]==='x') return false; x[t]='x';}; return true;",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                "table1Err2": {
                    "type": "staticText",
                    "text": "ERROR: column 'Restricted Text' must contain characters A-Za-z0-9 and _ only and must not start with an _",
                    "newLine": true,
                    "hidden": "if (!data.table1) return true; for (const c of data.table1) {if (c.table1Char !== '' && !c.table1Char.match(/^[A-Za-z0-9]([A-Za-z0-9-_])*$/)) return false;}; return true;",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                "table1": {
                    "type": "table",
                    "newLine": true,
                    "sm": 12,
                    "md": 12,
                    "lg": 12,
                    "xl": 12,
                    "label": "",
                    "showSecondAddAt": 5,
                    "items": [
                        {
                            "type": "checkbox",
                            "attr": "table1Chk",
                            "width": "16% ",
                            "title": "checkbox",
                            "tooltip": "Click on it",
                            "filter": false,
                            "sort": false,
                            "default": true
                        },
                        {
                            "type": "checkbox",
                            "attr": "table1ChkHide",
                            "width": "16% ",
                            "title": "hide",
                            "tooltip": "click to hide fields",
                            "filter": false,
                            "sort": false,
                            "default": false
                        },
                        {
                            "type": "text",
                            "attr": "table1Text1",
                            "width": "16% ",
                            "title": "Text",
                            "tooltip": "enter any text",
                            "filter": false,
                            "sort": false,
                            "default": ""
                        },
                        {
                            "type": "text",
                            "attr": "table1Unique",
                            "width": "17% ",
                            "title": "Unique Text",
                            "tooltip": "enter any text",
                            "filter": false,
                            "sort": false,
                            "default": "",
                            "validator": "const x={};for (const c of globalData.table1) {if (x[c.table1Unique]==='x') return false; x[c.table1Unique]='x';}; return true;",
                            "validatorNoSaveOnError": true
                        },
                        {
                            "type": "text",
                            "attr": "table1Char",
                            "width": "17% ",
                            "title": "Restricted Text",
                            "tooltip": "enter text with 'A-Za-z0-9_' only",
                            "filter": false,
                            "sort": false,
                            "default": "",
                            "validator": "return (data.table1Char==='') || data.table1Char.match(/^[A-Za-z0-9]([A-Za-z0-9-_])*$/);",
                            "validatorNoSaveOnError": true
                        },
                        {
                            "type": "number",
                            "attr": "table1Num",
                            "width": "16% ",
                            "title": "Number",
                            "tooltip": "enter a number",
                            "hidden": "data.table1ChkHide",
                            "filter": false,
                            "sort": false,
                            "min": 0,
                            "step": 0.001,
                            "default": 1
                        }
                    ]
                },

                "table2Hdr": {
                    "type": "header",
                    "text": "INITIALIZED TABLE with fixed data",
                    "size": 2
                },

                "introTable2Txt2": {
                    "type": "staticText",
                    "text": "This is a table with some preloaded and fixed rows; no deletes or additions.<br>Configure content at io-package.json.",
                    "newLine": true,
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                "table2": {
                    "type": "table",
                    "newLine": true,
                    "sm": 12,
                    "md": 12,
                    "lg": 12,
                    "xl": 12,
                    "label": "",
                    "noDelete": true,
                    "items": [
                        {
                            "type": "checkbox",
                            "attr": "table2Chk",
                            "width": "50% ",
                            "title": "checkbox (changeable)",
                            "tooltip": "Click on it",
                            "filter": false,
                            "sort": false,
                            "default": true
                        },
                        {
                            "type": "text",
                            "attr": "table2Text1",
                            "width": "50% ",
                            "title": "Text (fixed, not changeable)",
                            "tooltip": "enter any text",
                            "filter": false,
                            "sort": false,
                            "readOnly": true,
                            "default": ""
                        }
                    ]
                }
            }
        },

        "tab_99":{
            "type": "panel",
            "label": "INDEX",
            "items": {
                // alive - just indication if the instance is alive, and it could be used in "hidden" and "disabled" (will not be saved in config)
                "idx_a01": {
                    "type": "staticText",
                    "text": "alive",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_a01x": {
                    "type": "staticText",
                    "text": "see tab INFOS",
                    "style": {
                        "color": "green"
                    },
                   "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // autocomplete
                "idx_a02": {
                    "type": "staticText",
                    "text": "autocomplete",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_a02x": {
                    "type": "staticText",
                    "text": "see tab INPUT",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // autocompleteSendTo`
                "idx_a03": {
                    "type": "staticText",
                    "text": "autocompleteSendTo",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // certCollection - select certificate collection or just use all collections or don't use let's encrypt at all.
                "idx_c01": {
                    "type": "staticText",
                    "text": "certCollection",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // certificate
                "idx_c02": {
                    "type": "staticText",
                    "text": "certificate",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // certificates - it is a universal type that manages `certPublic`, `certPrivate`, `certChained` and `leCollection` attributes for you.
                "idx_c03": {
                    "type": "staticText",
                    "text": "certificates",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // checkbox - show checkbox
                "idx_c04": {
                    "type": "staticText",
                    "text": "checkbox",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_c04x": {
                    "type": "staticText",
                    "text": "see tab INPUT",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // checkLicense - Very special component to check the license online. It's required exactly `license` and `useLicenseManager` properties in native.
                "idx_c05": {
                    "type": "staticText",
                    "text": "checkLicense",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // chips - user can enter the word, and it will be added (see cloud => services => White list). Option is an array if no `delimiter` defined.
                "idx_c06": {
                    "type": "staticText",
                    "text": "chips",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_c06x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // color - color picker
                "idx_c07": {
                    "type": "staticText",
                    "text": "color",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_c07x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // coordinates
                "idx_c08": {
                    "type": "staticText",
                    "text": "coordinates",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_c08x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // cron
                "idx_c09": {
                    "type": "staticText",
                    "text": "cron",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_c09x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // custom (only Admin6)
                "idx_c10": {
                    "type": "staticText",
                    "text": "custom",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_c10x": {
                    "type": "staticText",
                    "text": "currently no working example available",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // divider - horizontal line
                "idx_d01": {
                    "type": "staticText",
                    "text": "divider",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_d01x": {
                    "type": "staticText",
                    "text": "see tab STATIC",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // file (only Admin6)
                "idx_f01": {
                    "type": "staticText",
                    "text": "file",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // fileSelector (only Admin6)
                "idx_f02": {
                    "type": "staticText",
                    "text": "fileSelector",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // func - Select function from `enum.func` (With color and icon) - (only Admin6)
                "idx_f03": {
                    "type": "staticText",
                    "text": "func",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_f03x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // header
                "idx_h01": {
                    "type": "staticText",
                    "text": "header",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_h01x": {
                    "type": "staticText",
                    "text": "see all tabs",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },


                // !icon - base64 icon
                "idx_i01": {
                    "type": "staticText",
                    "text": "icon",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_i01x": {
                    "type": "staticText",
                    "text": "not yet implemented",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // image - saves image as file of adapter.X object or as base64 in attribute
                "idx_i02": {
                    "type": "staticText",
                    "text": "image",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // instance
                "idx_i03": {
                    "type": "staticText",
                    "text": "instance",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_i03x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // ip - bind address
                "idx_i04": {
                    "type": "staticText",
                    "text": "ip",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_i04x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // json - json editor
                "idx_j01": {
                    "type": "staticText",
                    "text": "json",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_j01x": {
                    "type": "staticText",
                    "text": "see tab INPUT",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // language - select language
                "idx_l01": {
                    "type": "staticText",
                    "text": "language",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_l01x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // number
                "idx_n01": {
                    "type": "staticText",
                    "text": "number",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_n01x": {
                    "type": "staticText",
                    "text": "see tab INPUT",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // objectId - object ID - show it with name, color and icon
                "idx_o01": {
                    "type": "staticText",
                    "text": "objectId",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_o01x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // panel - Tab with items
                "idx_p01": {
                    "type": "staticText",
                    "text": "panel",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_p01x": {
                    "type": "staticText",
                    "text": "see all tabs",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // password (repeat - if repeat password must be shown with the same width settings)
                "idx_p02": {
                    "type": "staticText",
                    "text": "password",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_p02x": {
                    "type": "staticText",
                    "text": "see tab INPUT",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },


                // pattern - read only field with pattern like 'https://${data.ip}:${data.port}' (will not be saved in config)
                "idx_p03": {
                    "type": "staticText",
                    "text": "pattern",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_p03x": {
                    "type": "staticText",
                    "text": "see tab STATIC",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // port - Special input for ports. It checks automatically if port is used by other instances and shows warning
                "idx_p04": {
                    "type": "staticText",
                    "text": "port",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // room - Select room from `enum.room` (With color and icon) - (only Admin6)
                "idx_r01": {
                    "type": "staticText",
                    "text": "room",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_r01x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // select
                "idx_s01": {
                    "type": "staticText",
                    "text": "select",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_s01x": {
                    "type": "staticText",
                    "text": "see tab INPUT",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // selectSendTo
                "idx_s02": {
                    "type": "staticText",
                    "text": "selectSendTo",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // sendto - button that sends request to instance (https://github.com/iobroker-community-adapters/ioBroker.email/blob/master/admin/index_m.html#L128)
                "idx_s03": {
                    "type": "staticText",
                    "text": "sendto",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },

                // setState - button that set instance's state
                "idx_s04": {
                    "type": "staticText",
                    "text": "setState",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_s04x": {
                    "type": "staticText",
                    "text": "see tab INPUT",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // slider - show slider (only Admin6)
                "idx_s05": {
                    "type": "staticText",
                    "text": "slider",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_s05x": {
                    "type": "staticText",
                    "text": "see tab INPUT",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // staticImage - static image
                "idx_s06": {
                    "type": "staticText",
                    "text": "staticImage",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_s06x": {
                    "type": "staticText",
                    "text": "see tab STATIC",
                    "style": {
                        "color": "red"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // staticLink - static link
                "idx_s07": {
                    "type": "staticText",
                    "text": "staticLink",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_s07x": {
                    "type": "staticText",
                    "text": "see tab STATIC",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // staticText - static text like description
                "idx_s08": {
                    "type": "staticText",
                    "text": "staticText",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_s08x": {
                    "type": "staticText",
                    "text": "see tab STATIC",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },


                // table - table with items that could be deleted, added, movedUP, moved Down
                "idx_t01": {
                    "type": "staticText",
                    "text": "table",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_t01x": {
                    "type": "staticText",
                    "text": "see tab TABLES",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // tabs - Tabs with items
                "idx_t02": {
                    "type": "staticText",
                    "text": "tabs",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_t02x": {
                    "type": "staticText",
                    "text": "see main configuration",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // text - Text component
                "idx_t03": {
                    "type": "staticText",
                    "text": "text",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_t03x": {
                    "type": "staticText",
                    "text": "see tab INPUT",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // textSendTo
                "idx_t04": {
                    "type": "staticText",
                    "text": "textSendTo",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_t04x": {
                    "type": "staticText",
                    "text": "see tab SEND TO",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // user - Select user from system.user. (With color and icon)
                "idx_u01": {
                    "type": "staticText",
                    "text": "user",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_u01x": {
                    "type": "staticText",
                    "text": "see tab PICKERS",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                },

                // uuid - Show iobroker UUID
                "idx_u02": {
                    "type": "staticText",
                    "text": "uuid",
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6,
                    "newLine": true
                },
                "idx_u02x": {
                    "type": "staticText",
                    "text": "see tab INFOS",
                    "style": {
                        "color": "green"
                    },
                    "xs": 12,
                    "sm": 12,
                    "md": 12,
                    "lg": 6,
                    "xl": 6
                }
            }
        }

    }
}